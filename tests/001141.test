original.name="Reference_Invalid_7"
boogie.ignore=true
======
>>> main.whiley
type LinkedList is null | &{ int data, LinkedList next }

property acyclic(LinkedList l) -> (bool r):
   return l is null || acyclic(l->next)

method nop(LinkedList l)
requires acyclic(l):
    //
    skip

method main():
    LinkedList l1 = new { data: 1, next: null }
    LinkedList l2 = new { data: 2, next: l1 }
    // create cyclic list
    l1->next = l2
    //
    nop(l2)

public export method test():
    // This test cannot be executed because it necessarily goes
    // into an infinite loop.
    skip
---
=====
>>> main.whiley 4:5
   if l is null:
      return true
   else:
      return acyclic(l->next)
---